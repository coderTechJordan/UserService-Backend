AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Jordan-UserService

  Sample SAM Template for Jordan-UserService

Parameters:
  StageName:
    Type: String
    Default: Dev
    Description: The stage name for the API Gateway

Globals:
  Function:
    Timeout: 20

Resources:

  # IAM Role for Lambda Function
  JordanUserServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: JordanUserServiceRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

      Policies:
        - PolicyName: DynamoDBPutItemPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: dynamodb:PutItem
                Resource: "arn:aws:dynamodb:us-east-2:866934333672:table/jordan-user-service"

        - PolicyName: LambdaBasicExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"


  # Lambda Function Resource
  JordanUserService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: com.example.UserService.LambdaHandler::handleRequest
      Runtime: java17
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Role: !GetAtt JordanUserServiceRole.Arn  # Use the ARN directly

      Events:
        # API Gateway Event for POST /users
        CreateUser:
          Type: Api
          Properties:
            Path: /users
            Method: POST

        # API Gateway Event for GET /users
        ListUsers:
          Type: Api
          Properties:
            Path: /users
            Method: GET

        # API Gateway Event for GET /users/{userId}
        GetUserById:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: GET

        # API Gateway Event for PUT /users/{userId}
        UpdateUser:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: PUT

        # API Gateway Event for DELETE /users/{userId}
        DeleteUser:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: DELETE

        # API Gateway Event for POST /auth/login
        UserAuthentication:
          Type: Api
          Properties:
            Path: /auth/login
            Method: POST

        # API Gateway Event for POST /auth/logout
        UserLogout:
          Type: Api
          Properties:
            Path: /auth/logout
            Method: POST

        # API Gateway Event for PUT /users/{userId}/changepassword
        ChangePassword:
          Type: Api
          Properties:
            Path: /users/{userId}/changepassword
            Method: PUT

        # API Gateway Event for POST /users/resetpassword
        ResetPassword:
          Type: Api
          Properties:
            Path: /users/resetpassword
            Method: POST

Outputs:
  # Output API Gateway URL for the Lambda Function
  JordanUserServiceApi:
    Description: "API Gateway endpoint URL for Dev stage for Jordan-UserService function"
    Value: !Sub "https://${JordanUserService}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/users/"

  # Output Lambda Function ARN
  JordanUserService:
    Description: "Jordan-UserService Lambda Function ARN"
    Value: !GetAtt JordanUserService.Arn

  # Output IAM Role ARN for the Lambda Function
  JordanUserServiceIamRole:
    Description: "Implicit IAM Role created for Jordan-UserService function"
    Value: !GetAtt JordanUserServiceRole.Arn
