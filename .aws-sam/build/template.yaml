AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Jordan-UserService

  Sample SAM Template for Jordan-UserService

  '
Parameters:
  StageName:
    Type: String
    Default: Dev
    Description: The stage name for the API Gateway
Globals:
  Function:
    Timeout: 20
Resources:
  JordanUserServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: JordanUserServiceRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: DynamoDBPutItemPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: dynamodb:PutItem
            Resource: arn:aws:dynamodb:us-east-2:866934333672:table/jordan-user-service
      - PolicyName: LambdaBasicExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  JordanUserService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: JordanUserService
      Handler: com.example.UserService.LambdaHandler::handleRequest
      Runtime: java17
      Architectures:
      - x86_64
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Role:
        Fn::GetAtt:
        - JordanUserServiceRole
        - Arn
      Events:
        CreateUser:
          Type: Api
          Properties:
            Path: /users
            Method: POST
        ListUsers:
          Type: Api
          Properties:
            Path: /users
            Method: GET
        GetUserById:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: GET
        UpdateUser:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: PUT
        DeleteUser:
          Type: Api
          Properties:
            Path: /users/{userId}
            Method: DELETE
        UserAuthentication:
          Type: Api
          Properties:
            Path: /auth/login
            Method: POST
        UserLogout:
          Type: Api
          Properties:
            Path: /auth/logout
            Method: POST
        ChangePassword:
          Type: Api
          Properties:
            Path: /users/{userId}/changepassword
            Method: PUT
        ResetPassword:
          Type: Api
          Properties:
            Path: /users/resetpassword
            Method: POST
    Metadata:
      SamResourceId: JordanUserService
Outputs:
  JordanUserServiceApi:
    Description: API Gateway endpoint URL for Dev stage for Jordan-UserService function
    Value:
      Fn::Sub: https://${JordanUserService}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/users/
  JordanUserService:
    Description: Jordan-UserService Lambda Function ARN
    Value:
      Fn::GetAtt:
      - JordanUserService
      - Arn
  JordanUserServiceIamRole:
    Description: Implicit IAM Role created for Jordan-UserService function
    Value:
      Fn::GetAtt:
      - JordanUserServiceRole
      - Arn
